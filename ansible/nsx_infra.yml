#
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
    - static_vars.yml
    - user_defined_vars.yml
  tasks:
    - name: Register compute manager
      vmware.ansible_for_nsxt.nsxt_fabric_compute_managers:
          hostname: "{{ nsx_node1.hostname }}"
          username: "{{ nsx.username }}"
          password: "{{ nsx.password }}"
          validate_certs: "{{ validate_certs }}"
          display_name: "{{ item.display_name }}"
          server: "{{ item.display_name }}"
          origin_type: "{{ item.origin_type }}"
          credential:
            credential_type: "{{ item.credential_type }}"
            username: "{{ item.username }}"
            password: "{{ item.password }}"
          state: present
      with_items:
        - "{{compute_managers}}"

    - name: Create IP Pools
      vmware.ansible_for_nsxt.nsxt_policy_ip_pool:
        hostname: "{{ nsx_node1.mgmt_ip }}"
        username: "{{ nsx.username }}"
        password: "{{ nsx.password }}"
        validate_certs: "{{ validate_certs }}"
        display_name: "{{ item.display_name }}"
        pool_static_subnets: "{{ item.subnets }}"
        state: "{{ state }}"
      with_items:
        - "{{ ip_pools  }}"

    - name: Create edge uplink profile
      vmware.ansible_for_nsxt.nsxt_uplink_profiles:
        hostname: "{{ nsx_node1.mgmt_ip }}"
        username: "{{ nsx.username }}"
        password: "{{ nsx.password }}"
        validate_certs: "{{ validate_certs }}"
        resource_type: UplinkHostSwitchProfile
        display_name: "{{item.display_name}}"
        mtu: "{{item.mtu}}"
        teaming: "{{item.teaming}}"
        transport_vlan: "{{item.transport_vlan}}"
        state: "present"
        named_teamings: "{{item.named_teamings}}"
      with_items:
        - "{{edge_uplink_profiles}}"

    - name: Create host uplink profile
      vmware.ansible_for_nsxt.nsxt_uplink_profiles:
        hostname: "{{ nsx_node1.mgmt_ip }}"
        username: "{{ nsx.username }}"
        password: "{{ nsx.password }}"
        validate_certs: "{{ validate_certs }}"
        resource_type: UplinkHostSwitchProfile
        display_name: "{{item.display_name}}"
        teaming: "{{item.teaming}}"
        transport_vlan: "{{item.transport_vlan}}"
        state: "present"
        named_teamings: "{{item.named_teamings}}"
      with_items:
        - "{{host_uplink_profiles}}"

    - name: Create transport zone
      vmware.ansible_for_nsxt.nsxt_transport_zones:
        hostname: "{{ nsx_node1.mgmt_ip }}"
        username: "{{ nsx.username }}"
        password: "{{ nsx.password }}"
        validate_certs: "{{ validate_certs }}"
        resource_type: "TransportZone"
        display_name: "{{ item.display_name }}"
        description: "{{ item.description }}"
        transport_type: "{{ item.transport_type }}"
        uplink_teaming_policy_names: "{{item.uplink_teaming_policy_names}}"
        state: "{{ state }}"
      with_items:
        - "{{ transport_zones }}"

    - name: Pause for 5 minutes so that TZ are available (!!!DO NOT SKIP!!!)
      pause:
        minutes: 5

    - name: Create Transport Node Profiles
      vmware.ansible_for_nsxt.nsxt_transport_node_profiles:
        hostname: "{{ nsx_node1.mgmt_ip }}"
        username: "{{ nsx.username }}"
        password: "{{ nsx.password }}"
        validate_certs: "{{ validate_certs }}"
        resource_type: TransportNodeProfile
        display_name: "{{ item.display_name }}"
        description: "{{ item.description }}"
        host_switch_spec:
          resource_type: StandardHostSwitchSpec
          host_switches: "{{ item.host_switches }}"
        state: "{{ state }}"
      with_items:
        - "{{ transport_node_profiles }}"

    - name: Attach Transport node profile to collapsed cluster
      vmware.ansible_for_nsxt.nsxt_transport_node_collections:
        hostname: "{{ nsx_node1.mgmt_ip }}"
        username: "{{ nsx.username }}"
        password: "{{ nsx.password }}"
        validate_certs: "{{ validate_certs }}"
        display_name: "{{transport_node_profiles[0].display_name }}"
        resource_type: "TransportNodeCollection"
        description: "Transport Node Collections Hosts"
        compute_manager_name: "{{compute_managers[0].display_name}}"
        cluster_name: "{{ vcenter.cluster }}"
        transport_node_profile_name: "{{transport_node_profiles[0].display_name}}"
        state: present

    - name: Create VLAN Segmets
      vmware.ansible_for_nsxt.nsxt_policy_segment:
        hostname: "{{ nsx_node1.mgmt_ip }}"
        username: "{{ nsx.username }}"
        password: "{{ nsx.password }}"
        validate_certs: "{{ validate_certs }}"
        display_name: "{{ item.display_name }}"
        replication_mode: SOURCE
        admin_state: UP
        transport_zone_display_name: "{{ item.transport_zone_name }}"
        advanced_config:
          uplink_teaming_policy_name: "{{ item.uplink_teaming_policy_name }}"
        vlan_ids: "{{ item.vlan_ids }}"
        state: "{{ state }}"
      with_items:
        - "{{ segments }}"

    - name: Pause for 5 minutes so that VLAN Segments are Ready (!!!DO NOT SKIP!!!)
      pause:
        minutes: 5

    - name: Create Edge Transport Nodes
      vmware.ansible_for_nsxt.nsxt_transport_nodes:
        hostname: "{{ nsx_node1.mgmt_ip }}"
        username: "{{ nsx.username }}"
        password: "{{ nsx.password }}"
        validate_certs: "{{ validate_certs }}"
        display_name: "{{ item.display_name }}"
        host_switch_spec:
          resource_type: StandardHostSwitchSpec
          host_switches: "{{ item.host_switches }}"
        node_deployment_info: "{{ item.node_deployment_info }}"
        state: "{{ state }}"
      with_items:
        - "{{ transport_nodes }}"

    - name: Add edge cluster
      vmware.ansible_for_nsxt.nsxt_edge_clusters:
        hostname: "{{ nsx_node1.mgmt_ip }}"
        username: "{{ nsx.username }}"
        password: "{{ nsx.password }}"
        validate_certs: "{{ validate_certs }}"
        display_name: "{{ item.display_name }}"
        cluster_profile_bindings:
        - profile_name: "nsx-default-edge-high-availability-profile"
          resource_type: "EdgeHighAvailabilityProfile"
        members: "{{ item.members }}"
        state: "{{ state }}"
      with_items:
        - "{{ edge_clusters }}"

    - name: Pause for 5 minutes so that the edge cluster enforcement point is available (!!!DO NOT SKIP!!!)
      pause:
        minutes: 5
