#Pre-Configured DFW for Malware - Day3 CNS Livefire 2023

#Provider
terraform {
  required_providers {
    nsxt = {
      source = "vmware/nsxt"
      version = "3.3.0"
    }
  }
}

#NSX Access
provider "nsxt" {
  host     = "nsxmgr-01a.corp.local"
  username = "admin"
  password = "VMware1!VMware1!"
  allow_unverified_ssl = true
}

#NSX Groups
data "nsxt_policy_group" "mgmt-ip" {
  display_name = "mgmt-ip"
#  id = "721e5e56-da8f-4f7d-add5-9b7f092d2006"
}

data "nsxt_policy_group" "vdi" {
  display_name = "vdi"
#  id = "1cc34fb9-19c9-4f43-9ee2-78e767d7f660"
}

data "nsxt_policy_group" "web"{
  display_name = "web"
#  id = "5adf7671-096f-4da2-addf-69199dc8200f"
}

data "nsxt_policy_group" "db"{
  display_name = "db"
#  id = "b1e6e620-a6df-4aa9-8db7-4290c10d7f56"
}

#NSX Services
data "nsxt_policy_service" "HTTPS" {
  display_name = "HTTPS"
}
data "nsxt_policy_service" "ICMPv4-ALL"{
  display_name = "ICMPv4-ALL"
}
data "nsxt_policy_service" "MySQL"{
  display_name = "MySQL"
}
data "nsxt_policy_service" "SSH"{
  display_name = "SSH"
}
data "nsxt_policy_service" "HTTP8080"{
  display_name = "HTTP8080"
}
data "nsxt_policy_service" "RDP"{
  display_name = "RDP"
}
data "nsxt_policy_service" "HTTP"{
  display_name = "HTTP"
}

#NSX Security Policy and Rules
resource "nsxt_policy_security_policy" "deny_malware" {

  display_name = "Allow and Deny External"
  category     = "Application"
  locked       = false
  stateful     = true
  tcp_strict   = false
  sequence_number = 5


  rule {
    display_name       = "Allow to External"
    action             = "ALLOW"
    source_groups      = [data.nsxt_policy_group.web.path, data.nsxt_policy_group.vdi.path, data.nsxt_policy_group.db.path]
    logged             = false
    scope              = [data.nsxt_policy_group.web.path, data.nsxt_policy_group.vdi.path, data.nsxt_policy_group.db.path]

       }

  rule {
    display_name       = "Deny to External"
    action             = "DROP"
    destination_groups = [data.nsxt_policy_group.web.path, data.nsxt_policy_group.vdi.path, data.nsxt_policy_group.db.path]
    logged             = false
    scope              = [data.nsxt_policy_group.web.path, data.nsxt_policy_group.vdi.path, data.nsxt_policy_group.db.path]
       }
}

resource "nsxt_policy_security_policy" "webdb-malware" {

  display_name = "Web to DB"
  category     = "Application"
  locked       = false
  stateful     = true
  tcp_strict   = false
  sequence_number  = 4

  rule {
    display_name       = "Allow all"
    action             = "ALLOW"
    source_groups      = [data.nsxt_policy_group.web.path]
    services           = [data.nsxt_policy_service.MySQL.path]
    logged             = false
    destination_groups = [data.nsxt_policy_group.db.path]
    scope              = [data.nsxt_policy_group.web.path, data.nsxt_policy_group.db.path]
       }
}

resource "nsxt_policy_security_policy" "VDI_malware" {

  display_name = "VDI to Web"
  category     = "Application"
  locked       = false
  stateful     = true
  tcp_strict   = false
  sequence_number = 3

  rule {
    display_name       = "HTTPS_HTTP8080"
    action             = "ALLOW"
    source_groups      = [data.nsxt_policy_group.vdi.path]
    services           = [data.nsxt_policy_service.HTTPS.path, data.nsxt_policy_service.HTTP8080.path]
    logged             = false
    destination_groups = [data.nsxt_policy_group.web.path]
    scope              = [data.nsxt_policy_group.web.path, data.nsxt_policy_group.vdi.path]
       }
}

resource "nsxt_policy_security_policy" "externalweb_malware" {

  display_name = "External to Web"
  category     = "Application"
  locked       = false
  stateful     = true
  tcp_strict   = false
  sequence_number = 2

  rule {
    display_name       = "HTTPS Only"
    action             = "ALLOW"
    services           = [data.nsxt_policy_service.HTTPS.path]
    logged             = false
    destination_groups = [data.nsxt_policy_group.web.path]
    scope              = [data.nsxt_policy_group.web.path]
       }
}

resource "nsxt_policy_security_policy" "mgmt_malware" {

  display_name = "MGMT"
  category     = "Application"
  locked       = false
  stateful     = true
  tcp_strict   = false
  sequence_number = 1

  rule {
    display_name       = "MGMT All"
    action             = "ALLOW"
    source_groups      = [data.nsxt_policy_group.mgmt-ip.path]
    services           = [data.nsxt_policy_service.RDP.path, data.nsxt_policy_service.SSH.path, data.nsxt_policy_service.ICMPv4-ALL.path]
    logged             = false
    destination_groups = [data.nsxt_policy_group.vdi.path]
    scope              = [data.nsxt_policy_group.vdi.path]
       }
}
