apiVersion: v1
kind: Namespace
metadata:
  name: vmware-system-antrea
  labels:
    app: antrea-interworking
    openshift.io/run-level: '0'
---
# NOTE: In production the bootstrap config and secret should be filled by admin
# manually or external automation mechanism.
apiVersion: v1
kind: ConfigMap
metadata:
  name: bootstrap-config
  namespace: vmware-system-antrea
data:
  bootstrap.conf: |
    # bootstrapFrom can be "Inline" and "SupervisorCluster"
    # If "SupervisorCluster" is set, bootstrapSupervisorResourceName must be set, and clusterName, NSXManagers, vpcPath,
    # ProxyEndpoints will be filled automatically by register job.
    bootstrapFrom: "Inline"
    # bootstrapSupervisorResourceName is required if bootstrapFrom is "SupervisorCluster"
    # bootstrapSupervisorResourceName: dummyClusterName

    # Fill in the cluster name. It should be unique among the clusters managed by the NSX-T.
    clusterName: tkg-vsphere-wld
    # Fill in the NSX manager IPs. If there is only one IP, the value should be like [dummyNSXIP1]
    NSXManagers: [nsxmgr-01a.corp.local]
    # vhcPath is deprecated by vpcPath
    # vhcPath: ""
    # vpcPath is optional. It's for multi-tenancy isolation in NSX.
    vpcPath: ""
    # proxyEndpoints is optional. If proxyEndpoints.rest-api is set, NSXManagers will be ignored.
    proxyEndpoints:
      rest-api: []
      nsx-rpc-fwd-proxy: []
---
apiVersion: v1
kind: Secret
metadata:
  name: nsx-cert
  namespace: vmware-system-antrea
type: kubernetes.io/tls
data:
  # One line base64 encoded data. Can be generated by command: cat tls.crt | base64 -w 0
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxNQ0ZHei9GVXNiWExpU09GUDdjM0dCTGl2dVJhZ0dNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVTTUJBR0ExVUVCd3dKVUdGc2J5QkJiSFJ2TVE4dwpEUVlEVlFRS0RBWldUWGRoY21VeEZ6QVZCZ05WQkFzTURrRnVkSEpsWVNCRGJIVnpkR1Z5TVJnd0ZnWURWUVFECkRBOTBhMmN0ZG5Od2FHVnlaUzEzYkdRd0hoY05Nak13TXpJNE1URTBNakF3V2hjTk16TXdNekkxTVRFME1qQXcKV2pCeU1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEVqQVFCZ05WQkFjTUNWQmhiRzhnUVd4MApiekVQTUEwR0ExVUVDZ3dHVmsxM1lYSmxNUmN3RlFZRFZRUUxEQTVCYm5SeVpXRWdRMngxYzNSbGNqRVlNQllHCkExVUVBd3dQZEd0bkxYWnpjR2hsY21VdGQyeGtNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUF2QjU3Qmd5MmlISjhGNzNTU1ZpQ3k1MVl5OFB2RlNDb253QVVRVDRPYklBcmU0ald5d2lwdW0xZApBbFRScU9jSUQ1SE9WN3RoSTZOdDM5b3BSOGdNWmpQUDcrbVpBdWQ0ZHI5OGNLVTQ0UFFXK29nRW9HWjJjUXJnCjltdzVrZktHNFpmK09pOFdHRnFIOXpiTkY4L1JPekRZNDlVUWtYZTNZcDlnbjN3dnVYNG12VDFZSmR1eG9CaHcKK3NacDZKRjg1dTBQWTdWMGJodG91OC9XeHZWTENLTENGRGlDenR3QVllRlZKbzBJL0hlVjF6Z1RrMC9YZ0grMQpkUHJGdUVOQ21JK1VBeVc3TDhleGd4KzUzYzVHZG4wVGdoNEZiYTJhekpWS2lub1FZeDB6eGI2MENOclFGSDBBCkM4aGdMMThoQTJTckZ4czZ6QXl3a0QzZE1zR3dhUUlEQVFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ20KRFF0R1pJb2M3NjRBNzZTajJkWWVDaUtNRzI0RkRBTFhnTXN1Nk94ZzVEaTZ4dE5ZSXd4cW5oeFFCV3FscHQzQQpDMFNLSUJSRzNRZGtoWjRuby9WdGxPYlVYa2d0b2M5ZVhGVzZQNTJDRzRaR1FXK1RxQks3L2g1WlR5M2tJenhjCkxiQTFUQ0U5Z0x0OWdLYXY2dU96c1ZlZkJxY0l1d3pvTFVRZjE2b2dDdE1MUWQ1WVp2TDN2NS9haE9lWEoyQm4KQUxjWWdXOVpRcGlBK0FBWklrdzlTcnRHTE16azBmcmQvSFJvSlIwUU0wMmp1MGpDWGVST0lIaFpqNHkzQ2pJdAo2VkorUDZZcEhOOElNNzFCQmVEdGdveUtaWE5BZHdmWjZnV1pRVENvNTdwUWpETG8wSDYvMUE0WkRab1JUZ2h5Cm40bkxCUjdGcGgrZlZYbGtUY0JvCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K 
  # One line base64 encoded data. Can be generated by command: cat tls.key | base64 -w 0
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdkI1N0JneTJpSEo4RjczU1NWaUN5NTFZeThQdkZTQ29ud0FVUVQ0T2JJQXJlNGpXCnl3aXB1bTFkQWxUUnFPY0lENUhPVjd0aEk2TnQzOW9wUjhnTVpqUFA3K21aQXVkNGRyOThjS1U0NFBRVytvZ0UKb0daMmNRcmc5bXc1a2ZLRzRaZitPaThXR0ZxSDl6Yk5GOC9ST3pEWTQ5VVFrWGUzWXA5Z24zd3Z1WDRtdlQxWQpKZHV4b0JodytzWnA2SkY4NXUwUFk3VjBiaHRvdTgvV3h2VkxDS0xDRkRpQ3p0d0FZZUZWSm8wSS9IZVYxemdUCmswL1hnSCsxZFByRnVFTkNtSStVQXlXN0w4ZXhneCs1M2M1R2RuMFRnaDRGYmEyYXpKVktpbm9RWXgwenhiNjAKQ05yUUZIMEFDOGhnTDE4aEEyU3JGeHM2ekF5d2tEM2RNc0d3YVFJREFRQUJBb0lCQUY0RWxkTzJNdHdLNjc0cAozcGxOcFVFQ1NNaStDaFZ6RnhNd1JPOCtocEx2azh2UDNobm5JSHpOLzdnVWtCeHNLdmt0RkFXQTN0R2k4bHo0CmViMG9YQm9RTnhKZW0xeDZOeGlTSnkxZFJnb1h0QXhPUXBHdjQrNG5VN3VVNTBqci8wRnNaMkRJKzYvOFB3dnMKMVovYSsyVXJ5cHBEZUY1YmlNbS9nZGp6aGg2YjlJQ0pLYUFlUE5Lbk1vNFlNOHJ6YkUzeVBobEVCZ3NaS2g2WQpocVo2VnprbXl3Qk93V08vR2Y4M2FYbWtPNUpSRmxkSFVwWmVuRWZvOTI3ZW5kQ1NVK3VZVzhJSmNDRXh5SGthCmRWZU1lT0lGK3JNVHFWL1Bxa1FzNHBTRHFIUVRMR3h0S0V6cENEWC92RjZPTlU2aGNGU2ExakdDMU9nQm5SK3oKUitUMDJBRUNnWUVBM0k1TldtYU4veDVXeW1FbWM1UmR0NnRrZ1YzYWFIQjl6ZTNMb0MrS2tKUjZFK2dsbHFmSApKcDFaZlByeisrc3VicjBLN1lSai9uckJZT3ZtV2loMFVPaXBTb0FISkNTRGhMMGh5eGttNERCS2JiNFFqWjhLCnZSMFljSWFBRlNoV1lkVlpac3lKT3JzTld1R08wcldFQ0NyQzkvNFVzM1NmVFllTHNMdEdqT2tDZ1lFQTJsbTUKVjNLTms1eVlpN0FZNThoT0NaaEZtcHczUDNVQVB5aDQwTnBJRDBKek5nUzdHeWMzNGh6T3JvanYyQ0psdE9qMApjQitqUjhqUksrajJ6dlJOcG8vV09ReUhPaWZYZVl5ZHkxekVhSlYxbDZSbFNJS0VkalI5R0lnRDhtSlg1TTlDCmcvb3JydllzNVNDaldWSjVURG9xQ0dtcFRFOUxkUkFLS3ViVjE0RUNnWUI1enpIVGdwNWJ6d0s2QlF1NmU2K0MKdCtyck04MWpMdldjSFAvLytTRzdGZldTTnYxRGhtZ0w0STFDNUVxSjBHcTFpRHlYenkxMnA0OVRteFYrcDZjTgo1R0ZUSHdCU3FzUGtOSnlNVWRqUnFub0F3QjdlU0g4aTBRWGxaN01uZkQ2eEM2YXppclVqdFpqN24yVkU1REVHClhhK09UVXBiamtaSkNGcFRBaXRGdVFLQmdENzFtaVNsNmo3QzY1VnpyR3JBN2dlRU9hV3dINW9Ua1lPa2x0bVoKNXlkSFFOTTFvQUhmV0JUQnU3TEYxMnFaMkh2R3BCemtjbjlUWDBUckFxZC8rQmZyNTVoQmpZaHVUb3BFeW9jRgo4N2c0U0ZUMldTSUVTRStSS1BUMjJ6Ujd1TjVJQ09Ubk1NdGRQbXErODNyZzlnck54cXJ3VkptbFQ1dXNpVkgvCmgyK0JBb0dBU0pkK0k5bWNCckFOMzJpb2huS1FPbVgvamxTOGNzSkFUZ0EvUllicnEzdFVvLy8rcEcreUN6ZkQKc2NPcUJEc2k1ZDFDSWhocFJLcHZ1dHZ4TzBGUE1ad3dVVG1INTZYWmtxaXZ6U2h0QWtEVHlvNjVkaWJGNEN2WQpwNWl6cVQyVzJZL1UvalM5TGptL3h0QnpOcjloRGpoUmRaeW95NTdWaUEvcmlZN3Vmd1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
